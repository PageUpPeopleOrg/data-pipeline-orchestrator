"""Initial revision

Revision ID: 6ee0df05e706
Revises: 
Create Date: 2019-08-27 14:13:28.263356

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "6ee0df05e706"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # Generated using `alembic -c rdl/alembic.ini -x $DESTINATION_DB_URL revision -m "$REVISION_MESSAGE" --autogenerate`
    op.execute("CREATE SCHEMA IF NOT EXISTS dpo")

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "execution",
        sa.Column("execution_id", sa.String(length=250), nullable=False),
        sa.Column(
            "created_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("timezone('UTC', getdate())"),
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("timezone('UTC', getdate())"),
            nullable=False,
        ),
        sa.Column(
            "status", sa.String(length=50), server_default="INITIALISED", nullable=False
        ),
        sa.Column(
            "started_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("timezone('UTC', getdate())"),
            nullable=False,
        ),
        sa.Column("completed_on", sa.DateTime(timezone=True), nullable=True),
        sa.Column("execution_time_ms", sa.BigInteger(), nullable=True),
        sa.PrimaryKeyConstraint("execution_id"),
        schema="dpo",
    )
    op.create_table(
        "execution_step",
        sa.Column("execution_step_id", sa.String(length=250), nullable=False),
        sa.Column(
            "created_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("timezone('UTC', getdate())"),
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("timezone('UTC', getdate())"),
            nullable=False,
        ),
        sa.Column("execution_id", sa.String(length=250), nullable=False),
        sa.Column("step_name", sa.String(length=100), nullable=False),
        sa.Column(
            "status", sa.String(length=50), server_default="INITIALISED", nullable=False
        ),
        sa.Column(
            "started_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("timezone('UTC', getdate())"),
            nullable=False,
        ),
        sa.Column("completed_on", sa.DateTime(timezone=True), nullable=True),
        sa.Column("execution_time_ms", sa.BigInteger(), nullable=True),
        sa.Column("rows_processed", sa.BigInteger(), nullable=True),
        sa.ForeignKeyConstraint(["execution_id"], ["dpo.execution.execution_id"]),
        sa.PrimaryKeyConstraint("execution_step_id"),
        schema="dpo",
    )
    op.create_table(
        "execution_step_model",
        sa.Column("execution_step_model_id", sa.String(length=250), nullable=False),
        sa.Column(
            "created_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("timezone('UTC', getdate())"),
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("timezone('UTC', getdate())"),
            nullable=False,
        ),
        sa.Column("execution_step_id", sa.String(length=250), nullable=False),
        sa.Column("model_name", sa.String(length=250), nullable=False),
        sa.Column("checksum", sa.String(length=100), nullable=False),
        sa.ForeignKeyConstraint(
            ["execution_step_id"], ["dpo.execution_step.execution_step_id"]
        ),
        sa.PrimaryKeyConstraint("execution_step_model_id"),
        schema="dpo",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("execution_step_model", schema="dpo")
    op.drop_table("execution_step", schema="dpo")
    op.drop_table("execution", schema="dpo")
    # ### end Alembic commands ###

    # drop schema
    op.execute("DROP SCHEMA IF EXISTS rdl")
